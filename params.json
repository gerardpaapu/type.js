{"name":"Type.js","body":"### Type.js\r\n\r\nType.js provide the class Type, which allows programmers to treat the variety of type questions relevant to coding in javascript as values rather that abstract ideas.\r\n\r\n#### Types can be created from constructors\r\n\r\n`Type.from(Array).check([]) // true!`\r\n\r\n`Type.from(String).check(\"\") // true!`\r\n\r\nYou may also use `Type.check` as a short-cut as in\r\n\r\n`Type.check(Array, []) // true!`\r\n\r\n#### Some types are more specific than others\r\n\r\n`Type.Array.moreSpecificThan(Type.Object) // true!`\r\n`Type.Integer.moreSpecificThan(Type.Number) // true!`\r\n\r\n#### Makes javascript types less scary\r\n\r\nChecking for `null`, the `arguments` object, or `NaN` can be a little weird.\r\n\r\nIn Type.js they are represented by Type.Null, Type.Arguments, and Type.NaN.\r\n\r\n#### Duck Types, Generics, Interfaces and more...\r\n\r\nread [the Readme](https://github.com/sharkbrainguy/type.js/blob/master/README.mkd) for more documentation\r\n","tagline":"Type operations (checking, dispatch, contracts) for javascript","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}